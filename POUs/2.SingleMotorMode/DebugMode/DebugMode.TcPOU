<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="DebugMode" Id="{9c1b652b-c28b-4723-806b-1a1456d9a5fb}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM DebugMode
VAR
(* Common*)
	d_state: DINT;(*PowerOffState*)
	InitDone:BOOL;
	Busy: BOOL;
	fb_ton: TON;
	PowerState: INT;(*PowerOnState*)
	ton_t: TON;
(*Key Command*)
	btn_PowerOn: BOOL;
	btn_PowerOff: BOOL;
	LeftTopLinPositionNew:LREAL;
	LeftTopLinVelocityNew:LREAL:=1;
	btn_LeftTopLinMove:BOOL;
	btn_LeftTopLinStop:BOOL;
	RightTopLinPositionNew:LREAL;
	RightTopLinVelocityNew:LREAL:=1;
	btn_RightTopLinMove:BOOL;
	btn_RightTopLinStop:BOOL;
	LeftBottomLinPositionNew:LREAL;
	LeftBottomLinVelocityNew:LREAL:=1;
	btn_LeftBottomLinMove:BOOL;
	btn_LeftBottomLinStop:BOOL;
	RightBottomLinPositionNew:LREAL;
	RightBottomLinVelocityNew:LREAL:=1;
	btn_RightBottomLinMove:BOOL;
	btn_RightBottomLinStop:BOOL;
(*LeftTopLin*)
	fb_ton1_1:TON;
	fb_ton1_2:TON;
	LeftTopLinState:DINT;
	LeftTopLinBusy:BOOL;
	LeftTopLin_m_state: DINT;
	LeftTopLin_s_state: DINT;
(*RightTopLin*)
	fb_ton2_1:TON;
	fb_ton2_2:TON;
	RightTopLinState:DINT;
	RightTopLinBusy:BOOL;
	RightTopLin_m_state: DINT;
	RightTopLin_s_state: DINT;
(*LeftBottomLin*)
	fb_ton3_1:TON;
	fb_ton3_2:TON;
	LeftBottomLinState:DINT;
	LeftBottomLinBusy:BOOL;
	LeftBottomLin_m_state: DINT;
	LeftBottomLin_s_state: DINT;
(*RightBottomLin*)
	fb_ton4_1:TON;
	fb_ton4_2:TON;
	RightBottomLinState:DINT;
	RightBottomLinBusy:BOOL;
	RightBottomLin_m_state: DINT;
	RightBottomLin_s_state: DINT;


	btn_LeftTopStop: BOOL;
	(*¼ì²âµ½ÏÞÎ»£¬»Ö¸´Move×´Ì¬*)
	FTrig_ReachLS: F_TRIG;
	FTrig_btn_GapMove: F_TRIG;
	btn_Power: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*********************************************************************Monitor All Carrirt Position***********************************************)
A_MonitoringAllAxis();
(*********************************************************************A_PosDiffDetection***********************************************)
A_PosDiffDetection();
(*********************************************************************btn_PowerOn************************************************************)
IF btn_Power AND st_Power=0 THEN
	btn_PowerOn:=TRUE;
	btn_Power:=FALSE;
END_IF
IF btn_Power AND st_Power=1 THEN
	btn_PowerOff:=TRUE;
	btn_Power:=FALSE;
END_IF
(*********************************************************************btn_PowerOn************************************************************)
IF btn_PowerOn THEN
	A_PowerOn();
END_IF
(******************************************************ÉÏµç×´Ì¬£¬´¦ÓÚñîºÏ×´Ì¬£¬ESTOP***********************************************)
IF NOT btn_PowerOff THEN
	IF st_Power=1 AND st_Couple<>0THEN
		Error:=TRUE;
		ErrorID:=101;
		FB_PlcEmergencyStop();
		LED_Error:=TRUE;
	END_IF
END_IF
(*********************************************************************LeftTop_MOVE*****************************************************************)
IF InitDone THEN
	IF btn_LeftTopLinMove THEN
		CASE LeftTopLin_m_state OF
			0:
				FB_Move.Mode:=4;						(*1£ºgapÄ£Ê½£»2£ºµ¥ÁºÄ£Ê½£¬3£ºtaperÄ£Ê½£¬4£ºDebugÄ£Ê½*)
				FB_Move.CoupleState:=st_Couple;			(*ñîºÏ×´Ì¬ÊäÈë*)
				FB_Move.PowerState:=st_Power;			(*µçÔ´×´Ì¬ÊäÈë*)
				FB_Move.LeftTopMove:=TRUE;				(*Execute TRUE*)
				FB_Move.LeftTopPosition:=LeftTopLinPositionNew;	(*Î»ÖÃ*)
				FB_Move.LeftTopVelocity:=LeftTopLinVelocityNew;	(*ËÙ¶È*)
				FB_Move();								(*Æô¶¯FB*)
				LeftTopLin_m_state:=1;
			1:
				FB_Move();
				IF NOT FB_Move.LeftTopDone THEN			(*ÔË¶¯Î´Íê³É£¬Ñ­»·*)
					LeftTopLin_m_state:=1;
					LED_Run:=TRUE;
				ELSE									(*ÔË¶¯Íê³É£¬ÏÂÒ»²½*)
					LeftTopLin_m_state:=88;
				END_IF

			88:
				btn_LeftTopLinMove:=FALSE;					(*×´Ì¬»Ö¸´*)
				LeftTopLin_m_state:=0;
				LED_Run:=FALSE;
		END_CASE
	END_IF
END_IF
(*******************************************************************LeftTop_STOP********************************************************************)
IF btn_LeftTopLinStop THEN
	LED_Run:=FALSE;
	FB_Move.LeftTopReset:=TRUE;							(*¸øÔË¶¯FB¸øÍ£Ö¹ÐÅºÅ£¬Ê¹FB_Move×´Ì¬»Ö¸´*)
	FB_Move();											(*Æô¶¯FB_Move*)
	btn_LeftTopLinMove:=FALSE;							(*btn_GapMove:=FALSE*)
	LeftTopLin_m_state:=0;											(*m_state:=0;*)
	CASE LeftTopLin_s_state OF
			0:
				FB_Stop.Mode:=4;							(*1£ºgapÄ£Ê½£»2£ºµ¥ÁºÄ£Ê½£»3£ºtaperÄ£Ê½*)
				FB_Stop.CoupleState:=st_Couple;			(*ñîºÏ×´Ì¬ÊäÈë*)
				FB_Stop.PowerState:=st_Power;				(*µçÔ´×´Ì¬ÊäÈë*)
				FB_Stop.LeftTopStop:=TRUE;				(*Execute TRUE*)
				FB_Stop();								(*Æô¶¯FB*)
				LeftTopLin_s_state:=1;
			1:
				FB_Stop();
				IF NOT FB_Stop.LeftTopDone THEN			(*Í£Ö¹Î´Íê³É£¬Ñ­»·*)
					LeftTopLin_s_state:=1;
				ELSE									(*Í£Ö¹Íê³É£¬ÏÂÒ»²½*)
					LeftTopLin_s_state:=88;
				END_IF
			88:
				btn_LeftTopLinStop:=FALSE;						(*»Ö¸´×´Ì¬*)
				FB_Move.LeftTopReset:=FALSE;					(*ÔËÐÐFB*)
				LeftTopLin_s_state:=0;
		END_CASE

END_IF
(*********************************************************************RightTop_MOVE*****************************************************************)
IF InitDone THEN
	IF btn_RightTopLinMove THEN
		CASE RightTopLin_m_state OF
			0:
				FB_Move.Mode:=4;						(*1£ºgapÄ£Ê½£»2£ºµ¥ÁºÄ£Ê½£¬3£ºtaperÄ£Ê½£¬4£ºDebugÄ£Ê½*)
				FB_Move.CoupleState:=st_Couple;			(*ñîºÏ×´Ì¬ÊäÈë*)
				FB_Move.PowerState:=st_Power;			(*µçÔ´×´Ì¬ÊäÈë*)
				FB_Move.RightTopMove:=TRUE;				(*Execute TRUE*)
				FB_Move.RightTopPosition:=RightTopLinPositionNew;	(*Î»ÖÃ*)
				FB_Move.RightTopVelocity:=RightTopLinVelocityNew;	(*ËÙ¶È*)
				FB_Move();								(*Æô¶¯FB*)
				RightTopLin_m_state:=1;
			1:
				FB_Move();
				IF NOT FB_Move.RightTopDone THEN			(*ÔË¶¯Î´Íê³É£¬Ñ­»·*)
					RightTopLin_m_state:=1;
					LED_Run:=TRUE;
				ELSE									(*ÔË¶¯Íê³É£¬ÏÂÒ»²½*)
					RightTopLin_m_state:=88;
				END_IF

			88:
				btn_RightTopLinMove:=FALSE;					(*×´Ì¬»Ö¸´*)
				RightTopLin_m_state:=0;
				LED_Run:=FALSE;
		END_CASE
	END_IF
END_IF
(*******************************************************************RightTop_STOP********************************************************************)
IF btn_RightTopLinStop THEN
	LED_Run:=FALSE;
	FB_Move.RightTopReset:=TRUE;							(*¸øÔË¶¯FB¸øÍ£Ö¹ÐÅºÅ£¬Ê¹FB_Move×´Ì¬»Ö¸´*)
	FB_Move();											(*Æô¶¯FB_Move*)
	btn_RightTopLinMove:=FALSE;							(*btn_GapMove:=FALSE*)
	RightTopLin_m_state:=0;											(*m_state:=0;*)
	CASE RightTopLin_s_state OF
			0:
				FB_Stop.Mode:=4;							(*1£ºgapÄ£Ê½£»2£ºµ¥ÁºÄ£Ê½£»3£ºtaperÄ£Ê½*)
				FB_Stop.CoupleState:=st_Couple;			(*ñîºÏ×´Ì¬ÊäÈë*)
				FB_Stop.PowerState:=st_Power;				(*µçÔ´×´Ì¬ÊäÈë*)
				FB_Stop.RightTopStop:=TRUE;				(*Execute TRUE*)
				FB_Stop();								(*Æô¶¯FB*)
				RightTopLin_s_state:=1;
			1:
				FB_Stop();
				IF NOT FB_Stop.RightTopDone THEN			(*Í£Ö¹Î´Íê³É£¬Ñ­»·*)
					RightTopLin_s_state:=1;
				ELSE									(*Í£Ö¹Íê³É£¬ÏÂÒ»²½*)
					RightTopLin_s_state:=88;
				END_IF
			88:
				btn_RightTopLinStop:=FALSE;						(*»Ö¸´×´Ì¬*)
				FB_Move.RightTopReset:=FALSE;					(*ÔËÐÐFB*)
				RightTopLin_s_state:=0;
		END_CASE

END_IF
(*********************************************************************LeftBottom_MOVE*****************************************************************)
IF InitDone THEN
	IF btn_LeftBottomLinMove THEN
		CASE LeftBottomLin_m_state OF
			0:
				FB_Move.Mode:=4;						(*1£ºgapÄ£Ê½£»2£ºµ¥ÁºÄ£Ê½£¬3£ºtaperÄ£Ê½£¬4£ºDebugÄ£Ê½*)
				FB_Move.CoupleState:=st_Couple;			(*ñîºÏ×´Ì¬ÊäÈë*)
				FB_Move.PowerState:=st_Power;			(*µçÔ´×´Ì¬ÊäÈë*)
				FB_Move.LeftBottomMove:=TRUE;				(*Execute TRUE*)
				FB_Move.LeftBottomPosition:=LeftBottomLinPositionNew;	(*Î»ÖÃ*)
				FB_Move.LeftBottomVelocity:=LeftBottomLinVelocityNew;	(*ËÙ¶È*)
				FB_Move();								(*Æô¶¯FB*)
				LeftBottomLin_m_state:=1;
			1:
				FB_Move();
				IF NOT FB_Move.LeftBottomDone THEN			(*ÔË¶¯Î´Íê³É£¬Ñ­»·*)
					LeftBottomLin_m_state:=1;
					LED_Run:=TRUE;
				ELSE									(*ÔË¶¯Íê³É£¬ÏÂÒ»²½*)
					LeftBottomLin_m_state:=88;
				END_IF

			88:
				btn_LeftBottomLinMove:=FALSE;					(*×´Ì¬»Ö¸´*)
				LeftBottomLin_m_state:=0;
				LED_Run:=FALSE;
		END_CASE
	END_IF
END_IF
(*******************************************************************LeftBottom_STOP********************************************************************)
IF btn_LeftBottomLinStop THEN
	LED_Run:=FALSE;
	FB_Move.LeftBottomReset:=TRUE;							(*¸øÔË¶¯FB¸øÍ£Ö¹ÐÅºÅ£¬Ê¹FB_Move×´Ì¬»Ö¸´*)
	FB_Move();											(*Æô¶¯FB_Move*)
	btn_LeftBottomLinMove:=FALSE;							(*btn_GapMove:=FALSE*)
	LeftBottomLin_m_state:=0;											(*m_state:=0;*)
	CASE LeftBottomLin_s_state OF
			0:
				FB_Stop.Mode:=4;							(*1£ºgapÄ£Ê½£»2£ºµ¥ÁºÄ£Ê½£»3£ºtaperÄ£Ê½*)
				FB_Stop.CoupleState:=st_Couple;			(*ñîºÏ×´Ì¬ÊäÈë*)
				FB_Stop.PowerState:=st_Power;				(*µçÔ´×´Ì¬ÊäÈë*)
				FB_Stop.LeftBottomStop:=TRUE;				(*Execute TRUE*)
				FB_Stop();								(*Æô¶¯FB*)
				LeftBottomLin_s_state:=1;
			1:
				FB_Stop();
				IF NOT FB_Stop.LeftBottomDone THEN			(*Í£Ö¹Î´Íê³É£¬Ñ­»·*)
					LeftBottomLin_s_state:=1;
				ELSE									(*Í£Ö¹Íê³É£¬ÏÂÒ»²½*)
					LeftBottomLin_s_state:=88;
				END_IF
			88:
				btn_LeftBottomLinStop:=FALSE;						(*»Ö¸´×´Ì¬*)
				FB_Move.LeftBottomReset:=FALSE;					(*ÔËÐÐFB*)
				LeftBottomLin_s_state:=0;
		END_CASE

END_IF

(*********************************************************************RightTop_MOVE*****************************************************************)
IF InitDone THEN
	IF btn_RightBottomLinMove THEN
		CASE RightBottomLin_m_state OF
			0:
				FB_Move.Mode:=4;						(*1£ºgapÄ£Ê½£»2£ºµ¥ÁºÄ£Ê½£¬3£ºtaperÄ£Ê½£¬4£ºDebugÄ£Ê½*)
				FB_Move.CoupleState:=st_Couple;			(*ñîºÏ×´Ì¬ÊäÈë*)
				FB_Move.PowerState:=st_Power;			(*µçÔ´×´Ì¬ÊäÈë*)
				FB_Move.RightBottomMove:=TRUE;				(*Execute TRUE*)
				FB_Move.RightBottomPosition:=RightBottomLinPositionNew;	(*Î»ÖÃ*)
				FB_Move.RightBottomVelocity:=RightBottomLinVelocityNew;	(*ËÙ¶È*)
				FB_Move();								(*Æô¶¯FB*)
				RightBottomLin_m_state:=1;
			1:
				FB_Move();
				IF NOT FB_Move.RightBottomDone THEN			(*ÔË¶¯Î´Íê³É£¬Ñ­»·*)
					RightBottomLin_m_state:=1;
					LED_Run:=TRUE;
				ELSE									(*ÔË¶¯Íê³É£¬ÏÂÒ»²½*)
					RightBottomLin_m_state:=88;
				END_IF

			88:
				btn_RightBottomLinMove:=FALSE;					(*×´Ì¬»Ö¸´*)
				RightBottomLin_m_state:=0;
				LED_Run:=FALSE;
		END_CASE
	END_IF
END_IF
(*******************************************************************RightBottom_STOP********************************************************************)
IF btn_RightBottomLinStop THEN
	LED_Run:=FALSE;
	FB_Move.RightBottomReset:=TRUE;							(*¸øÔË¶¯FB¸øÍ£Ö¹ÐÅºÅ£¬Ê¹FB_Move×´Ì¬»Ö¸´*)
	FB_Move();											(*Æô¶¯FB_Move*)
	btn_RightBottomLinMove:=FALSE;							(*btn_GapMove:=FALSE*)
	RightBottomLin_m_state:=0;											(*m_state:=0;*)
	CASE RightBottomLin_s_state OF
			0:
				FB_Stop.Mode:=4;							(*1£ºgapÄ£Ê½£»2£ºµ¥ÁºÄ£Ê½£»3£ºtaperÄ£Ê½*)
				FB_Stop.CoupleState:=st_Couple;			(*ñîºÏ×´Ì¬ÊäÈë*)
				FB_Stop.PowerState:=st_Power;				(*µçÔ´×´Ì¬ÊäÈë*)
				FB_Stop.RightBottomStop:=TRUE;				(*Execute TRUE*)
				FB_Stop();								(*Æô¶¯FB*)
				RightBottomLin_s_state:=1;
			1:
				FB_Stop();
				IF NOT FB_Stop.RightBottomDone THEN			(*Í£Ö¹Î´Íê³É£¬Ñ­»·*)
					RightBottomLin_s_state:=1;
				ELSE									(*Í£Ö¹Íê³É£¬ÏÂÒ»²½*)
					RightBottomLin_s_state:=88;
				END_IF
			88:
				btn_RightBottomLinStop:=FALSE;						(*»Ö¸´×´Ì¬*)
				FB_Move.RightBottomReset:=FALSE;					(*ÔËÐÐFB*)
				RightBottomLin_s_state:=0;
		END_CASE

END_IF
(*********************************************************************btn_PowerOff************************************************************)
IF btn_PowerOff THEN
	A_PowerOff();
END_IF
(****************************MoveIndicator***************************)
IF Velo_LeftTopLin>0 THEN
	LeftTopLinMoveIndicator:=1;
ELSIF Velo_LeftTopLin<0 THEN
	LeftTopLinMoveIndicator:=-1;
ELSE
	LeftTopLinMoveIndicator:=0;
END_IF
IF Velo_RightTopLin>0 THEN
	RightTopLinMoveIndicator:=1;
ELSIF Velo_RightTopLin<0 THEN
	RightTopLinMoveIndicator:=-1;
ELSE
	RightTopLinMoveIndicator:=0;
END_IF
IF Velo_LeftBottomLin>0 THEN
	LeftBottomLinMoveIndicator:=1;
ELSIF Velo_LeftBottomLin<0 THEN
	LeftBottomLinMoveIndicator:=-1;
ELSE
	LeftBottomLinMoveIndicator:=0;
END_IF
IF Velo_RightBottomLin>0 THEN
	RightBottomLinMoveIndicator:=1;
ELSIF Velo_RightBottomLin<0 THEN
	RightBottomLinMoveIndicator:=-1;
ELSE
	RightBottomLinMoveIndicator:=0;
END_IF
(*********************************************************************ÏÞÎ»Åö´¥×´Ì¬»Ö¸´************************************************************)
(*Èç¹û¼ì²âµ½ÏØÏÞÎ»¿ª¹ØÏÂ½µÑØ£¬»Ö¸´Move×´Ì¬*)
FTrig_ReachLS(CLK:=Unreach_LS_Top AND Unreach_LS_Bottom);
IF FTrig_ReachLS.Q THEN
	btn_LeftTopLinStop:=TRUE;
	btn_RightTopLinStop:=TRUE;
	btn_LeftBottomLinStop:=TRUE;
	btn_RightBottomLinStop:=TRUE;
END_IF
IF btn_LeftTopLinStop THEN
	btn_RightTopLinStop:=TRUE;
END_IF
IF btn_RightTopLinStop THEN
	btn_LeftBottomLinStop:=TRUE;
END_IF
IF btn_LeftBottomLinStop THEN
	btn_RightBottomLinStop:=TRUE;
END_IF

(*Èç¹û¼ì²âµ½TopÏÞÎ»¿ª¹ØFALSE£¬ÇÒÄ¿±êÎ»ÖÃ´óÓÚµ±Ç°Î»ÖÃÊ±£¬»òÕßÏà·´Ê±£¬»Ö¸´Move×´Ì¬*)
IF NOT Unreach_LS_Top AND LeftTopLinPositionNew-Pos_LeftTopLin>0.0005 AND btn_LeftTopLinMove THEN
	btn_LeftTopLinStop:=TRUE;
END_IF
IF NOT Unreach_LS_Bottom AND RightTopLinPositionNew-Pos_RightTopLin<0.0005 AND btn_RightTopLinMove THEN
	btn_RightTopLinStop:=TRUE;
END_IF
IF NOT Unreach_LS_Top AND LeftBottomLinPositionNew-Pos_LeftBottomLin>0.0005 AND btn_LeftBottomLinMove THEN
	btn_LeftBottomLinStop:=TRUE;
END_IF
IF NOT Unreach_LS_Bottom AND RightBottomLinPositionNew-Pos_RightBottomLin<0.0005 AND btn_RightBottomLinMove THEN
	btn_RightBottomLinStop:=TRUE;
END_IF]]></ST>
    </Implementation>
    <Action Name="A_monitoringAllAxis" Id="{d1a34df5-69b1-4771-bf4a-eb30f477489b}">
      <Implementation>
        <ST><![CDATA[(****************************************************************
NAME:			A_MonitoringAllAxis
DATA:			2017.5.8
VERSION:		1.0.0
DESCRIPTION:	
				Ã¿´ÎÑ­»·¾ùÖ´ÐÐÖáÎ»ÖÃºÍÖáÔË¶¯µÄ¼ì²é
				1.4ÖáÏà¶ÔÔË¶¯¼ì²é
				2.4Öá¹âÕ¤³ßÎ»ÖÃ¡¢ËÙ¶È¶Ô±È¼ì²é
				3.Ã¿Öá¹âÕ¤ºÍ±àÂëÆ÷Î»ÖÃ¶Ô±È¼ì²é
HISTORY:
				2017.5.8	NEW

***************************************************************)
(*************************************************************************************1.4ÖáÏà¶ÔÔË¶¯¼ì²é************************************************************************************)
(*DebugÄ£Ê½£¬Öá¾ù×ÔÓÉ»î¶¯*)
(*(*³ýÁËÓÒÉÏºÍÓÒÏÂÖáÒ»Æð¶¯£¬ÆäÓàÖá¶¯¶¼ESTOP*)
(*×óÉÏ¡¢×óÏÂÖá¶¯*)
IF  LeftTopLin.Status.Moving OR LeftBottomLin.Status.Moving THEN
	FB_PlcEmergencyStop();
	Error:=TRUE;
	ErrorID:=11;
END_IF
(*ÓÒÉÏ¶¯¡¢ÓÒÏÂ²»¶¯£¬»òÕßÓÒÏÂ¶¯¡¢ÓÒÉÏ²»¶¯¡£ESTOP*)
IF (RightTopLin.Status.Moving AND RightBottomLin.Status.NotMoving) OR (RightTopLin.Status.NotMoving AND RightBottomLin.Status.Moving) THEN
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=12;
END_IF
*)
(*************************************************************************************2.4Öá¹âÕ¤³ßÎ»ÖÃ¡¢ËÙ¶È¶Ô±È¼ì²é**********************************************************************)
IF st_power<>0 THEN
(*×óÖáÉÏÏÂÎ»ÖÃ¶Ô±È£¬³¬³öESTOP*)
IF ABS(Pos_LeftTopLin-Pos_LeftBottomLin)>Threshold_LeftPos_Debug  THEN
		btn_LeftTopLinStop:=TRUE;
		btn_RightTopLinStop:=TRUE;
		btn_LeftBottomLinStop:=TRUE;
		btn_RightBottomLInStop:=TRUE;
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=11;
		LED_Error:=TRUE;
END_IF
(*ÓÒÖáÉÏÏÂÎ»ÖÃËÙ¶È¶Ô±È£¬³¬³öESTOP*)
IF ABS(Pos_RightTopLin-Pos_RightBottomLin)>Threshold_RightPos_Debug  THEN
		btn_LeftTopLinStop:=TRUE;
		btn_RightTopLinStop:=TRUE;
		btn_LeftBottomLinStop:=TRUE;
		btn_RightBottomLInStop:=TRUE;
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=12;
		LED_Error:=TRUE;
END_IF
(*ÉÏÖá×óÓÒÎ»ÖÃ¶Ô±È£¬³¬³öESTOP*)
IF ABS(Pos_LeftTopLin-Pos_RightTopLin)>Threshold_TopPos_Debug  THEN
		btn_LeftTopLinStop:=TRUE;
		btn_RightTopLinStop:=TRUE;
		btn_LeftBottomLinStop:=TRUE;
		btn_RightBottomLInStop:=TRUE;
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=13;
		LED_Error:=TRUE;
END_IF
(*ÏÂÖá×óÓÒÎ»ÖÃ¶Ô±È£¬³¬³öESTOP*)
IF ABS(Pos_LeftBottomLin-Pos_RightBottomLin)>Threshold_BottomPos_Debug  THEN
		btn_LeftTopLinStop:=TRUE;
		btn_RightTopLinStop:=TRUE;
		btn_LeftBottomLinStop:=TRUE;
		btn_RightBottomLInStop:=TRUE;
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=14;
		LED_Error:=TRUE;
END_IF
END_IF
(*********************************************************************************3.Ã¿Öá¹âÕ¤ºÍ±àÂëÆ÷Î»ÖÃ¶Ô±È¼ì²é**********************************************************************)]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_PosDiffDetection" Id="{0b914de3-5a16-4135-8c47-916309d8d3da}">
      <Implementation>
        <ST><![CDATA[IF ABS(PosDiff_LeftTopLin_actual-PosDiff_RightTopLin_actual)>0.2 THEN
	ErrorID:=51;
	Error:=TRUE;
	btn_LeftTopLinStop:=TRUE;
	btn_RightTopLinStop:=TRUE;
	btn_LeftBottomLinStop:=TRUE;
	btn_RightBottomLInStop:=TRUE;
	FB_PlcEmergencyStop();
	LED_Error:=TRUE;
ELSIF ABS(PosDiff_LeftBottomLin_actual-PosDiff_RightBottomLin_actual)>0.2 THEN
	ErrorID:=53;
	Error:=TRUE;
	btn_LeftTopLinStop:=TRUE;
	btn_RightTopLinStop:=TRUE;
	btn_LeftBottomLinStop:=TRUE;
	btn_RightBottomLInStop:=TRUE;
	FB_PlcEmergencyStop();
	LED_Error:=TRUE;
END_IF
]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_PowerOff" Id="{e677fe86-edfe-48c4-ba29-b932f9bd11d2}">
      <Implementation>
        <ST><![CDATA[CASE d_state OF
		0:(*PowerOff*)
			FB_Power(Off:=TRUE);
				d_state:=1;
		1:
			IF NOT FB_power.OffStatus THEN
				d_state:=1;
			ELSE
				d_state:=88;
			END_IF
		88:(*ResetAllState*)
			btn_PowerOn:=FALSE;
			btn_PowerOff:=FALSE;
			ton_t.IN:=FALSE;
			InitDone:=FALSE;
			Error:=FALSE;
			ErrorID:=0;
			d_state:=0;

			btn_LeftTopLinMove:=FALSE;
			btn_LeftTopLinStop:=FALSE;
			fb_ton1_1.IN:=FALSE;
			fb_ton1_2.IN:=FALSE;
			LeftTopLinState:=0;
			LeftTopLinBusy:=FALSE;
			LeftTopLin_m_state:=0;
			LeftTopLin_s_state:=0;

			btn_RightTopLinMove:=FALSE;
			btn_RightTopLinStop:=FALSE;
			fb_ton2_1.IN:=FALSE;
			fb_ton2_2.IN:=FALSE;
			RightTopLinState:=0;
			RightTopLinBusy:=FALSE;
			RightTopLin_m_state:=0;
			RightTopLin_s_state:=0;

			btn_LeftBottomLinMove:=FALSE;
			btn_LeftBottomLinStop:=FALSE;
			fb_ton3_1.IN:=FALSE;
			fb_ton3_2.IN:=FALSE;
			LeftBottomLinState:=0;
			LeftBottomLinBusy:=FALSE;
			LeftBottomLin_m_state:=0;
			LeftBottomLin_s_state:=0;

			btn_RightBottomLinMove:=FALSE;
			btn_RightBottomLinStop:=FALSE;
			fb_ton4_1.IN:=FALSE;
			fb_ton4_2.IN:=FALSE;
			RightBottomLinState:=0;
			RightBottomLinBusy:=FALSE;
			RightBottomLin_m_state:=0;
			RightBottomLin_s_state:=0;

		LED_Error:=FALSE;
		LED_Run:=FALSE;

END_CASE]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_PowerOn" Id="{3be612a8-046c-45b5-ad28-b2fb90dcb4f1}">
      <Implementation>
        <ST><![CDATA[(****************************************************************
NAME:			A_SetAxisPositionAndPowerOn
DATA:			2017.3.27
VERSION:		1.0.0
DESCRIPTION:	
				ÉÏµãÃüÁîºó£¬Ë³ÐòÖ´ÐÐ£º
				1.FB_SetAxisPosition
				2.FB_PowerOn
				·µ»ØÖ´ÐÐÊÇ·ñ³É¹¦
HISTORY:
				2017.3.27		NEW
				2017.5.8		É¾³ýÁËsetAxisPosition£¬ÒÆ¶¯µ½MAIN³ÌÐòÖÐ
							±ä¸üNAMEÎªA_PowerOn

***************************************************************)
fb_ton(PT:=t#0.5s);
CASE PowerState OF
	0:	(*FB_Power_On*)
		FB_Power(On:=TRUE);
		fb_ton.IN:=TRUE;
		PowerState:=1;
	1:	(*wait*)
		FB_power();
		IF NOT FB_power.OnStatus THEN		(*FB_Power_OnÃ»ÓÐÖ´ÐÐÍê£¬wait£¬³¬Ê±FB Error*)
			IF NOT fb_ton.Q THEN
				PowerState:=1;
			ELSE
				ErrorID:=1;
				PowerState:=99;
			END_IF
		ELSE
			PowerState:=88;
		END_IF
	88:	(*All Done*)
		btn_PowerOn:=FALSE;
		PowerState:=0;
		Error:=FALSE;
		ErrorID:=0;
		Busy:=FALSE;
		InitDone:=TRUE;
		FB_power.On:=FALSE;
		fb_ton.IN:=FALSE;
	99:
		btn_PowerOn:=FALSE;
		PowerState:=99;
		Error:=TRUE;
		Busy:=FALSE;
		InitDone:=FALSE;
		FB_Power.On:=FALSE;
		fb_ton.IN:=FALSE;
		LED_Error:=TRUE;
END_CASE]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="DebugMode">
      <LineId Id="65" Count="3" />
      <LineId Id="445" Count="7" />
      <LineId Id="444" Count="0" />
      <LineId Id="69" Count="310" />
    </LineIds>
    <LineIds Name="DebugMode.A_monitoringAllAxis">
      <LineId Id="0" Count="76" />
    </LineIds>
    <LineIds Name="DebugMode.A_PosDiffDetection">
      <LineId Id="0" Count="19" />
    </LineIds>
    <LineIds Name="DebugMode.A_PowerOff">
      <LineId Id="0" Count="58" />
    </LineIds>
    <LineIds Name="DebugMode.A_PowerOn">
      <LineId Id="0" Count="51" />
    </LineIds>
  </POU>
</TcPlcObject>